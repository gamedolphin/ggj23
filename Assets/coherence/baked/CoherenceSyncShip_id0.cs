// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;

	public class Binding_27f5579ed674f391a8bdd06c92936648_8683b8e3_f12b_4b60_a3d3_96266e280529 : IntBinding
	{
		private ShipModel CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (ShipModel)UnityComponent;
		}
		public override string CoherenceComponentName => "Ship_id0_ShipModel_849745348499479206";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override int Value
		{
			get => (int)(System.Int32)(CastedUnityComponent.seed);
			set => CastedUnityComponent.seed = (System.Int32)(value);
		}

		protected override int ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Ship_id0_ShipModel_849745348499479206)coherenceComponent;
			return update.seed;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Ship_id0_ShipModel_849745348499479206)coherenceComponent;
			update.seed = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Ship_id0_ShipModel_849745348499479206();
		}
	}

	public class Binding_27f5579ed674f391a8bdd06c92936648_6d2d51a2_42aa_4017_9666_158c3b093e7e : StringBinding
	{
		private TMPro.TextMeshProUGUI CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (TMPro.TextMeshProUGUI)UnityComponent;
		}
		public override string CoherenceComponentName => "Ship_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override string Value
		{
			get => (string)(System.String)(CastedUnityComponent.text);
			set => CastedUnityComponent.text = (System.String)(value);
		}

		protected override string ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Ship_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159)coherenceComponent;
			return update.text;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Ship_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159)coherenceComponent;
			update.text = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Ship_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159();
		}
	}

	public class Binding_27f5579ed674f391a8bdd06c92936648_d8ca172c_e100_40ef_894e_06c75395a956 : DeepRotationBinding
	{
		private UnityEngine.Transform CastedUnityComponent;		

		protected override void OnBindingCloned()
		{
			CastedUnityComponent = (UnityEngine.Transform)UnityComponent;
		}
		public override string CoherenceComponentName => "Ship_id0_UnityEngine__char_46_Transform_8688555239120687463";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Quaternion Value
		{
			get => (Quaternion)(UnityEngine.Quaternion)(CastedUnityComponent.localRotation);
			set => CastedUnityComponent.localRotation = (UnityEngine.Quaternion)(value);
		}

		protected override Quaternion ReadComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Ship_id0_UnityEngine__char_46_Transform_8688555239120687463)coherenceComponent;
			return update.rotation;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (Ship_id0_UnityEngine__char_46_Transform_8688555239120687463)coherenceComponent;
			update.rotation = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new Ship_id0_UnityEngine__char_46_Transform_8688555239120687463();
		}
	}


	[Preserve]
	[AddComponentMenu("coherence/Baked/Baked 'Ship' (auto assigned)")]
	[RequireComponent(typeof(CoherenceSync))]
	public class CoherenceSyncShip_id0 : CoherenceSyncBaked
	{
		private CoherenceSync coherenceSync;
		private Logger logger;

		// Cached targets for commands

		private IClient client;
		private CoherenceMonoBridge monoBridge => coherenceSync.MonoBridge;

		protected void Awake()
		{
			coherenceSync = GetComponent<CoherenceSync>();
			coherenceSync.usingReflection = false;

			logger = coherenceSync.logger.With<CoherenceSyncShip_id0>();
			if (coherenceSync.TryGetBindingByGuid("8683b8e3-f12b-4b60-a3d3-96266e280529", "seed", out Binding InternalShip_id0_ShipModel_849745348499479206_Ship_id0_ShipModel_849745348499479206_seed))
			{
				var clone = new Binding_27f5579ed674f391a8bdd06c92936648_8683b8e3_f12b_4b60_a3d3_96266e280529();
				InternalShip_id0_ShipModel_849745348499479206_Ship_id0_ShipModel_849745348499479206_seed.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalShip_id0_ShipModel_849745348499479206_Ship_id0_ShipModel_849745348499479206_seed)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (ShipModel).seed");
			}
			if (coherenceSync.TryGetBindingByGuid("6d2d51a2-42aa-4017-9666-158c3b093e7e", "text", out Binding InternalShip_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159_Ship_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159_text))
			{
				var clone = new Binding_27f5579ed674f391a8bdd06c92936648_6d2d51a2_42aa_4017_9666_158c3b093e7e();
				InternalShip_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159_Ship_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159_text.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalShip_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159_Ship_id0_TMPro__char_46_TextMeshProUGUI_168106699071901159_text)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (TMPro.TextMeshProUGUI).text");
			}
			if (coherenceSync.TryGetBindingByGuid("d8ca172c-e100-40ef-894e-06c75395a956", "rotation", out Binding InternalShip_id0_UnityEngine__char_46_Transform_8688555239120687463_Ship_id0_UnityEngine__char_46_Transform_8688555239120687463_rotation))
			{
				var clone = new Binding_27f5579ed674f391a8bdd06c92936648_d8ca172c_e100_40ef_894e_06c75395a956();
				InternalShip_id0_UnityEngine__char_46_Transform_8688555239120687463_Ship_id0_UnityEngine__char_46_Transform_8688555239120687463_rotation.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalShip_id0_UnityEngine__char_46_Transform_8688555239120687463_Ship_id0_UnityEngine__char_46_Transform_8688555239120687463_rotation)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.Transform).rotation");
			}
		}

		public override List<ICoherenceComponentData> CreateEntity()
		{
			if (coherenceSync.UsesLODsAtRuntime && (Archetypes.IndexForName.TryGetValue(coherenceSync.Archetype.ArchetypeName, out int archetypeIndex)))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
			else
			{
				logger.Warning($"Unable to find archetype {coherenceSync.Archetype.ArchetypeName} in dictionary. Please, bake manually (coherence > Bake)");
			}

			return null;
		}

		public override void Initialize(CoherenceSync sync, IClient client)
		{
			if (coherenceSync == null)
			{
				coherenceSync = sync;
			}
			this.client = client;
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				default:
					logger.Warning($"[CoherenceSyncShip_id0] Unhandled command: {command.GetType()}.");
					break;
			}
		}
	}
}
